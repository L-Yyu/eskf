Compilation of the CXX compiler identification source "CMakeCXXCompilerId.cpp" did not produce an executable in "/home/corki/eskf/build/CMakeFiles/3.22.1/CompilerIdCXX".

Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags:  

The output was:
1
/usr/bin/ld: cannot open output file a.out: 没有那个文件或目录
collect2: error: ld returned 1 exit status


The CXX compiler identification could not be found in "/home/corki/eskf/build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.o"

Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
Compiler: /usr/bin/c++ 
Build flags: 
Id flags: --c++ 

The output was:
1
c++: error: unrecognized command-line option ‘--c++’


Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
Compiler: /usr/bin/c++ 
Build flags: 
Id flags: --ec++ 

The output was:
1
c++: error: unrecognized command-line option ‘--ec++’; did you mean ‘-Weffc++’?


Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
Compiler: /usr/bin/c++ 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
1
c++: warning: ‘-mcpu=’ is deprecated; use ‘-mtune=’ or ‘-march=’ instead
c++: error: unrecognized command-line option ‘--target=arm-arm-none-eabi’


Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -c 

The output was:
1
cc1plus: fatal error: CMakeCXXCompilerId.cpp: 没有那个文件或目录
compilation terminated.


Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
Compiler: /usr/bin/c++ 
Build flags: 
Id flags: -c;-I__does_not_exist__ 

The output was:
1
cc1plus: fatal error: CMakeCXXCompilerId.cpp: 没有那个文件或目录
compilation terminated.


Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
Compiler: /usr/bin/c++ 
Build flags: 
Id flags:  

The output was:
1
cc1plus: fatal error: CMakeCXXCompilerId.cpp: 没有那个文件或目录
compilation terminated.


The CXX compiler identification could not be found in "/home/corki/eskf/build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.o"

The CXX compiler identification could not be found in "/home/corki/eskf/build/CMakeFiles/3.22.1/CompilerIdCXX/a.out"

Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: --c++ 

The output was:
1
g++: error: unrecognized command-line option ‘--c++’


Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
Compiler: /usr/bin/c++ 
Build flags: 
Id flags: --c++ 

The output was:
1
c++: error: unrecognized command-line option ‘--c++’


Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
Compiler: /usr/bin/c++ 
Build flags: 
Id flags: --ec++ 

The output was:
1
c++: error: unrecognized command-line option ‘--ec++’; did you mean ‘-Weffc++’?


Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
Compiler: /usr/bin/c++ 
Build flags: 
Id flags:  

The output was:
1
/usr/bin/ld: /usr/lib/gcc/x86_64-linux-gnu/11/../../../x86_64-linux-gnu/Scrt1.o: in function `_start':
(.text+0x1b): undefined reference to `main'
collect2: error: ld returned 1 exit status


Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
Compiler: /usr/bin/c++ 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
1
c++: warning: ‘-mcpu=’ is deprecated; use ‘-mtune=’ or ‘-march=’ instead
c++: error: unrecognized command-line option ‘--target=arm-arm-none-eabi’


Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: --ec++ 

The output was:
1
g++: error: unrecognized command-line option ‘--ec++’; did you mean ‘-Weffc++’?


Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
Compiler: /usr/bin/c++ 
Build flags: 
Id flags: -c;-I__does_not_exist__ 

The output was:
1
cc1plus: fatal error: CMakeCXXCompilerId.cpp: 没有那个文件或目录
compilation terminated.


Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
Compiler: /usr/bin/c++ 
Build flags: 
Id flags: -c 

The output was:
1
Assembler messages:
致命错误： can't create CMakeCXXCompilerId.o: 没有那个文件或目录


Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
Compiler: /usr/bin/c++ 
Build flags: 
Id flags:  

The output was:
1
cc1plus: fatal error: CMakeCXXCompilerId.cpp: 没有那个文件或目录
compilation terminated.


Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
Compiler: /usr/bin/c++ 
Build flags: 
Id flags: --c++ 

The output was:
1
c++: error: unrecognized command-line option ‘--c++’


Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
Compiler: /usr/bin/c++ 
Build flags: 
Id flags: --ec++ 

The output was:
1
c++: error: unrecognized command-line option ‘--ec++’; did you mean ‘-Weffc++’?


Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
Compiler: /usr/bin/c++ 
Build flags: 
Id flags: -c 

The output was:
1
cc1plus: fatal error: CMakeCXXCompilerId.cpp: 没有那个文件或目录
compilation terminated.


Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
Compiler: /usr/bin/c++ 
Build flags: 
Id flags: --c++ 

The output was:
1
c++: error: unrecognized command-line option ‘--c++’


Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
Compiler: /usr/bin/c++ 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
1
c++: warning: ‘-mcpu=’ is deprecated; use ‘-mtune=’ or ‘-march=’ instead
c++: error: unrecognized command-line option ‘--target=arm-arm-none-eabi’


Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
Compiler: /usr/bin/c++ 
Build flags: 
Id flags: --ec++ 

The output was:
1
c++: error: unrecognized command-line option ‘--ec++’; did you mean ‘-Weffc++’?


Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
Compiler: /usr/bin/c++ 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
1
c++: warning: ‘-mcpu=’ is deprecated; use ‘-mtune=’ or ‘-march=’ instead
c++: error: unrecognized command-line option ‘--target=arm-arm-none-eabi’


Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
Compiler: /usr/bin/c++ 
Build flags: 
Id flags: -c;-I__does_not_exist__ 

The output was:
1
cc1plus: fatal error: CMakeCXXCompilerId.cpp: 没有那个文件或目录
compilation terminated.


Checking whether the CXX compiler is IAR using "" did not match "IAR .+ Compiler":
Checking whether the CXX compiler is IAR using "" did not match "IAR .+ Compiler":
Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
1
g++: warning: ‘-mcpu=’ is deprecated; use ‘-mtune=’ or ‘-march=’ instead
g++: error: unrecognized command-line option ‘--target=arm-arm-none-eabi’


Detecting C compiler ABI info failed to compile with the following output:
Change Dir: /home/corki/eskf/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/gmake -f Makefile cmTC_facd5/fast && /usr/bin/gmake  -f CMakeFiles/cmTC_facd5.dir/build.make CMakeFiles/cmTC_facd5.dir/build
gmake[1]: Entering directory '/home/corki/eskf/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_facd5.dir/CMakeCCompilerABI.c.o
/usr/bin/cc   -v -o CMakeFiles/cmTC_facd5.dir/CMakeCCompilerABI.c.o -c /usr/share/cmake-3.22/Modules/CMakeCCompilerABI.c
Using built-in specs.
COLLECT_GCC=/usr/bin/cc
OFFLOAD_TARGET_NAMES=nvptx-none:amdgcn-amdhsa
OFFLOAD_TARGET_DEFAULT=1
Target: x86_64-linux-gnu
Configured with: ../src/configure -v --with-pkgversion='Ubuntu 11.4.0-1ubuntu1~22.04' --with-bugurl=file:///usr/share/doc/gcc-11/README.Bugs --enable-languages=c,ada,c++,go,brig,d,fortran,objc,obj-c++,m2 --prefix=/usr --with-gcc-major-version-only --program-suffix=-11 --program-prefix=x86_64-linux-gnu- --enable-shared --enable-linker-build-id --libexecdir=/usr/lib --without-included-gettext --enable-threads=posix --libdir=/usr/lib --enable-nls --enable-bootstrap --enable-clocale=gnu --enable-libstdcxx-debug --enable-libstdcxx-time=yes --with-default-libstdcxx-abi=new --enable-gnu-unique-object --disable-vtable-verify --enable-plugin --enable-default-pie --with-system-zlib --enable-libphobos-checking=release --with-target-system-zlib=auto --enable-objc-gc=auto --enable-multiarch --disable-werror --enable-cet --with-arch-32=i686 --with-abi=m64 --with-multilib-list=m32,m64,mx32 --enable-multilib --with-tune=generic --enable-offload-targets=nvptx-none=/build/gcc-11-XeT9lY/gcc-11-11.4.0/debian/tmp-nvptx/usr,amdgcn-amdhsa=/build/gcc-11-XeT9lY/gcc-11-11.4.0/debian/tmp-gcn/usr --without-cuda-driver --enable-checking=release --build=x86_64-linux-gnu --host=x86_64-linux-gnu --target=x86_64-linux-gnu --with-build-config=bootstrap-lto-lean --enable-link-serialization=2
Thread model: posix
Supported LTO compression algorithms: zlib zstd
gcc version 11.4.0 (Ubuntu 11.4.0-1ubuntu1~22.04) 
COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles/cmTC_facd5.dir/CMakeCCompilerABI.c.o' '-c' '-mtune=generic' '-march=x86-64' '-dumpdir' 'CMakeFiles/cmTC_facd5.dir/'
 /usr/lib/gcc/x86_64-linux-gnu/11/cc1 -quiet -v -imultiarch x86_64-linux-gnu /usr/share/cmake-3.22/Modules/CMakeCCompilerABI.c -quiet -dumpdir CMakeFiles/cmTC_facd5.dir/ -dumpbase CMakeCCompilerABI.c.c -dumpbase-ext .c -mtune=generic -march=x86-64 -version -fasynchronous-unwind-tables -fstack-protector-strong -Wformat -Wformat-security -fstack-clash-protection -fcf-protection -o /tmp/ccynXymE.s
GNU C17 (Ubuntu 11.4.0-1ubuntu1~22.04) version 11.4.0 (x86_64-linux-gnu)
	compiled by GNU C version 11.4.0, GMP version 6.2.1, MPFR version 4.1.0, MPC version 1.2.1, isl version isl-0.24-GMP

GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
ignoring nonexistent directory "/usr/local/include/x86_64-linux-gnu"
ignoring nonexistent directory "/usr/lib/gcc/x86_64-linux-gnu/11/include-fixed"
ignoring nonexistent directory "/usr/lib/gcc/x86_64-linux-gnu/11/../../../../x86_64-linux-gnu/include"
#include "..." search starts here:
#include <...> search starts here:
 /usr/lib/gcc/x86_64-linux-gnu/11/include
 /usr/local/include
 /usr/include/x86_64-linux-gnu
 /usr/include
End of search list.
GNU C17 (Ubuntu 11.4.0-1ubuntu1~22.04) version 11.4.0 (x86_64-linux-gnu)
	compiled by GNU C version 11.4.0, GMP version 6.2.1, MPFR version 4.1.0, MPC version 1.2.1, isl version isl-0.24-GMP

GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
Compiler executable checksum: 50eaa2331df977b8016186198deb2d18
COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles/cmTC_facd5.dir/CMakeCCompilerABI.c.o' '-c' '-mtune=generic' '-march=x86-64' '-dumpdir' 'CMakeFiles/cmTC_facd5.dir/'
 as -v --64 -o CMakeFiles/cmTC_facd5.dir/CMakeCCompilerABI.c.o /tmp/ccynXymE.s
GNU assembler version 2.38 (x86_64-linux-gnu) using BFD version (GNU Binutils for Ubuntu) 2.38
COMPILER_PATH=/usr/lib/gcc/x86_64-linux-gnu/11/:/usr/lib/gcc/x86_64-linux-gnu/11/:/usr/lib/gcc/x86_64-linux-gnu/:/usr/lib/gcc/x86_64-linux-gnu/11/:/usr/lib/gcc/x86_64-linux-gnu/
LIBRARY_PATH=/usr/lib/gcc/x86_64-linux-gnu/11/:/usr/lib/gcc/x86_64-linux-gnu/11/../../../x86_64-linux-gnu/:/usr/lib/gcc/x86_64-linux-gnu/11/../../../../lib/:/lib/x86_64-linux-gnu/:/lib/../lib/:/usr/lib/x86_64-linux-gnu/:/usr/lib/../lib/:/usr/lib/gcc/x86_64-linux-gnu/11/../../../:/lib/:/usr/lib/
COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles/cmTC_facd5.dir/CMakeCCompilerABI.c.o' '-c' '-mtune=generic' '-march=x86-64' '-dumpdir' 'CMakeFiles/cmTC_facd5.dir/CMakeCCompilerABI.c.'
Linking C executable cmTC_facd5
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_facd5.dir/link.txt --verbose=1
/usr/bin/cc  -v CMakeFiles/cmTC_facd5.dir/CMakeCCompilerABI.c.o -o cmTC_facd5 
Using built-in specs.
COLLECT_GCC=/usr/bin/cc
COLLECT_LTO_WRAPPER=/usr/lib/gcc/x86_64-linux-gnu/11/lto-wrapper
OFFLOAD_TARGET_NAMES=nvptx-none:amdgcn-amdhsa
OFFLOAD_TARGET_DEFAULT=1
Target: x86_64-linux-gnu
Configured with: ../src/configure -v --with-pkgversion='Ubuntu 11.4.0-1ubuntu1~22.04' --with-bugurl=file:///usr/share/doc/gcc-11/README.Bugs --enable-languages=c,ada,c++,go,brig,d,fortran,objc,obj-c++,m2 --prefix=/usr --with-gcc-major-version-only --program-suffix=-11 --program-prefix=x86_64-linux-gnu- --enable-shared --enable-linker-build-id --libexecdir=/usr/lib --without-included-gettext --enable-threads=posix --libdir=/usr/lib --enable-nls --enable-bootstrap --enable-clocale=gnu --enable-libstdcxx-debug --enable-libstdcxx-time=yes --with-default-libstdcxx-abi=new --enable-gnu-unique-object --disable-vtable-verify --enable-plugin --enable-default-pie --with-system-zlib --enable-libphobos-checking=release --with-target-system-zlib=auto --enable-objc-gc=auto --enable-multiarch --disable-werror --enable-cet --with-arch-32=i686 --with-abi=m64 --with-multilib-list=m32,m64,mx32 --enable-multilib --with-tune=generic --enable-offload-targets=nvptx-none=/build/gcc-11-XeT9lY/gcc-11-11.4.0/debian/tmp-nvptx/usr,amdgcn-amdhsa=/build/gcc-11-XeT9lY/gcc-11-11.4.0/debian/tmp-gcn/usr --without-cuda-driver --enable-checking=release --build=x86_64-linux-gnu --host=x86_64-linux-gnu --target=x86_64-linux-gnu --with-build-config=bootstrap-lto-lean --enable-link-serialization=2
Thread model: posix
Supported LTO compression algorithms: zlib zstd
gcc version 11.4.0 (Ubuntu 11.4.0-1ubuntu1~22.04) 
COMPILER_PATH=/usr/lib/gcc/x86_64-linux-gnu/11/:/usr/lib/gcc/x86_64-linux-gnu/11/:/usr/lib/gcc/x86_64-linux-gnu/:/usr/lib/gcc/x86_64-linux-gnu/11/:/usr/lib/gcc/x86_64-linux-gnu/
LIBRARY_PATH=/usr/lib/gcc/x86_64-linux-gnu/11/:/usr/lib/gcc/x86_64-linux-gnu/11/../../../x86_64-linux-gnu/:/usr/lib/gcc/x86_64-linux-gnu/11/../../../../lib/:/lib/x86_64-linux-gnu/:/lib/../lib/:/usr/lib/x86_64-linux-gnu/:/usr/lib/../lib/:/usr/lib/gcc/x86_64-linux-gnu/11/../../../:/lib/:/usr/lib/
COLLECT_GCC_OPTIONS='-v' '-o' 'cmTC_facd5' '-mtune=generic' '-march=x86-64' '-dumpdir' 'cmTC_facd5.'
 /usr/lib/gcc/x86_64-linux-gnu/11/collect2 -plugin /usr/lib/gcc/x86_64-linux-gnu/11/liblto_plugin.so -plugin-opt=/usr/lib/gcc/x86_64-linux-gnu/11/lto-wrapper -plugin-opt=-fresolution=/tmp/ccM3e25A.res -plugin-opt=-pass-through=-lgcc -plugin-opt=-pass-through=-lgcc_s -plugin-opt=-pass-through=-lc -plugin-opt=-pass-through=-lgcc -plugin-opt=-pass-through=-lgcc_s --build-id --eh-frame-hdr -m elf_x86_64 --hash-style=gnu --as-needed -dynamic-linker /lib64/ld-linux-x86-64.so.2 -pie -z now -z relro -o cmTC_facd5 /usr/lib/gcc/x86_64-linux-gnu/11/../../../x86_64-linux-gnu/Scrt1.o /usr/lib/gcc/x86_64-linux-gnu/11/../../../x86_64-linux-gnu/crti.o /usr/lib/gcc/x86_64-linux-gnu/11/crtbeginS.o -L/usr/lib/gcc/x86_64-linux-gnu/11 -L/usr/lib/gcc/x86_64-linux-gnu/11/../../../x86_64-linux-gnu -L/usr/lib/gcc/x86_64-linux-gnu/11/../../../../lib -L/lib/x86_64-linux-gnu -L/lib/../lib -L/usr/lib/x86_64-linux-gnu -L/usr/lib/../lib -L/usr/lib/gcc/x86_64-linux-gnu/11/../../.. CMakeFiles/cmTC_facd5.dir/CMakeCCompilerABI.c.o -lgcc --push-state --as-needed -lgcc_s --pop-state -lc -lgcc --push-state --as-needed -lgcc_s --pop-state /usr/lib/gcc/x86_64-linux-gnu/11/crtendS.o /usr/lib/gcc/x86_64-linux-gnu/11/../../../x86_64-linux-gnu/crtn.o
COLLECT_GCC_OPTIONS='-v' '-o' 'cmTC_facd5' '-mtune=generic' '-march=x86-64' '-dumpdir' 'cmTC_facd5.'
gmake[1]: Leaving directory '/home/corki/eskf/build/CMakeFiles/CMakeTmp'


Cannot copy output executable
  ''
to destination specified by COPY_FILE:
  '/home/corki/eskf/build/CMakeFiles/3.22.1/CMakeDetermineCompilerABI_C.bin'
Unable to find the executable at any of:
  /home/corki/eskf/build/CMakeFiles/CMakeTmp/cmTC_facd5
  /home/corki/eskf/build/CMakeFiles/CMakeTmp/Debug/cmTC_facd5
  /home/corki/eskf/build/CMakeFiles/CMakeTmp/Development/cmTC_facd5


Determining if the C compiler works failed with the following output:
Change Dir: /home/corki/eskf/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/gmake -f Makefile cmTC_24630/fast && gmake: *** 没有规则可制作目标“cmTC_24630/fast”。 停止。



Detecting CXX compiler ABI info failed to compile with the following output:
Change Dir: /home/corki/eskf/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/gmake -f Makefile cmTC_15fcf/fast && gmake[1]: Entering directory '/home/corki/eskf/build/CMakeFiles/CMakeTmp'
gmake[1]: Makefile: No such file or directory
gmake[1]: *** No rule to make target 'Makefile'.  Stop.
gmake[1]: Leaving directory '/home/corki/eskf/build/CMakeFiles/CMakeTmp'




Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/gcc 
Build flags: 
Id flags:  

The output was:
1
/usr/bin/ld: cannot open output file a.out: 没有那个文件或目录
collect2: error: ld returned 1 exit status


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/gcc 
Build flags: 
Id flags:  

The output was:
1
/usr/bin/ld: cannot open output file a.out: 没有那个文件或目录
collect2: error: ld returned 1 exit status


Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags:  

The output was:
1
/usr/bin/ld: cannot open output file a.out: 没有那个文件或目录
collect2: error: ld returned 1 exit status


Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags:  

The output was:
1
/usr/bin/ld: cannot open output file a.out: 没有那个文件或目录
collect2: error: ld returned 1 exit status


Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -c 

The output was:
1
Assembler messages:
致命错误： can't create CMakeCXXCompilerId.o: 没有那个文件或目录


Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: --c++ 

The output was:
1
g++: error: unrecognized command-line option ‘--c++’


Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -c 

The output was:
1
Assembler messages:
致命错误： can't create CMakeCXXCompilerId.o: 没有那个文件或目录


Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: --ec++ 

The output was:
1
g++: error: unrecognized command-line option ‘--ec++’; did you mean ‘-Weffc++’?


Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: --c++ 

The output was:
1
g++: error: unrecognized command-line option ‘--c++’


Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
1
g++: warning: ‘-mcpu=’ is deprecated; use ‘-mtune=’ or ‘-march=’ instead
g++: error: unrecognized command-line option ‘--target=arm-arm-none-eabi’


Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: --ec++ 

The output was:
1
g++: error: unrecognized command-line option ‘--ec++’; did you mean ‘-Weffc++’?


Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
1
g++: warning: ‘-mcpu=’ is deprecated; use ‘-mtune=’ or ‘-march=’ instead
g++: error: unrecognized command-line option ‘--target=arm-arm-none-eabi’


Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -c;-I__does_not_exist__ 

The output was:
1
cc1plus: fatal error: CMakeCXXCompilerId.cpp: 没有那个文件或目录
compilation terminated.


Determining if the C compiler works failed with the following output:
Change Dir: /home/corki/eskf/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/gmake -f Makefile cmTC_62cee/fast && gmake[1]: 进入目录“/home/corki/eskf/build/CMakeFiles/CMakeTmp”
/usr/bin/gmake  -f CMakeFiles/cmTC_62cee.dir/build.make CMakeFiles/cmTC_62cee.dir/build
gmake[2]: 进入目录“/home/corki/eskf/build/CMakeFiles/CMakeTmp”
Building C object CMakeFiles/cmTC_62cee.dir/testCCompiler.c.o
/usr/bin/gcc    -o CMakeFiles/cmTC_62cee.dir/testCCompiler.c.o -c /home/corki/eskf/build/CMakeFiles/CMakeTmp/testCCompiler.c
Linking C executable cmTC_62cee
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_62cee.dir/link.txt --verbose=1
Error opening link script "CMakeFiles/cmTC_62cee.dir/link.txt"
gmake[2]: *** [CMakeFiles/cmTC_62cee.dir/build.make:99：cmTC_62cee] 错误 1
gmake[2]: 离开目录“/home/corki/eskf/build/CMakeFiles/CMakeTmp”
gmake[1]: *** [Makefile:127：cmTC_62cee/fast] 错误 2
gmake[1]: 离开目录“/home/corki/eskf/build/CMakeFiles/CMakeTmp”



Detecting CXX compiler ABI info failed to compile with the following output:
Change Dir: /home/corki/eskf/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/gmake -f Makefile cmTC_f1377/fast && /usr/bin/gmake  -f CMakeFiles/cmTC_f1377.dir/build.make CMakeFiles/cmTC_f1377.dir/build
gmake[1]: Entering directory '/home/corki/eskf/build/CMakeFiles/CMakeTmp'
gmake[1]: CMakeFiles/cmTC_f1377.dir/build.make: No such file or directory
gmake[1]: *** No rule to make target 'CMakeFiles/cmTC_f1377.dir/build.make'.  Stop.
gmake[1]: Leaving directory '/home/corki/eskf/build/CMakeFiles/CMakeTmp'
gmake: *** [Makefile:127: cmTC_f1377/fast] Error 2




Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/gcc 
Build flags: 
Id flags:  

The output was:
1
/usr/bin/ld: cannot open output file a.out: 没有那个文件或目录
collect2: error: ld returned 1 exit status


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/gcc 
Build flags: 
Id flags:  

The output was:
1
/usr/bin/ld: cannot open output file a.out: 没有那个文件或目录
collect2: error: ld returned 1 exit status


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/gcc 
Build flags: 
Id flags: -c 

The output was:
1
Assembler messages:
致命错误： can't create CMakeCCompilerId.o: 没有那个文件或目录


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/gcc 
Build flags: 
Id flags: -c 

The output was:
1
cc1: fatal error: CMakeCCompilerId.c: 没有那个文件或目录
compilation terminated.


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/gcc 
Build flags: 
Id flags: -Aa 

The output was:
1
cc1: fatal error: CMakeCCompilerId.c: 没有那个文件或目录
compilation terminated.


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/gcc 
Build flags: 
Id flags: -Aa 

The output was:
1
<command-line>: error: missing '(' after predicate


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/gcc 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
1
/usr/bin/ld: cannot open output file a.out: 没有那个文件或目录
collect2: error: ld returned 1 exit status


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/gcc 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
1
gcc: warning: ‘-mcpu=’ is deprecated; use ‘-mtune=’ or ‘-march=’ instead
gcc: error: unrecognized command-line option ‘--target=arm-arm-none-eabi’


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/gcc 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
1
/usr/bin/ld: cannot open output file a.out: 没有那个文件或目录
collect2: error: ld returned 1 exit status


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/gcc 
Build flags: 
Id flags: -c;-I__does_not_exist__ 

The output was:
1
cc1: fatal error: CMakeCCompilerId.c: 没有那个文件或目录
compilation terminated.


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/gcc 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
1
gcc: warning: ‘-mcpu=’ is deprecated; use ‘-mtune=’ or ‘-march=’ instead
gcc: error: unrecognized command-line option ‘--target=arm-arm-none-eabi’


Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags:  

The output was:
1
/usr/bin/ld: cannot open output file a.out: 没有那个文件或目录
collect2: error: ld returned 1 exit status


Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags:  

The output was:
1
cc1plus: fatal error: CMakeCXXCompilerId.cpp: 没有那个文件或目录
compilation terminated.


Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -c 

The output was:
1
cc1plus: fatal error: CMakeCXXCompilerId.cpp: 没有那个文件或目录
compilation terminated.


Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: --c++ 

The output was:
1
g++: error: unrecognized command-line option ‘--c++’


Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -c 

The output was:
1
Assembler messages:
致命错误： can't create CMakeCXXCompilerId.o: 没有那个文件或目录


Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: --ec++ 

The output was:
1
g++: error: unrecognized command-line option ‘--ec++’; did you mean ‘-Weffc++’?


Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: --c++ 

The output was:
1
g++: error: unrecognized command-line option ‘--c++’


Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
1
g++: warning: ‘-mcpu=’ is deprecated; use ‘-mtune=’ or ‘-march=’ instead
g++: error: unrecognized command-line option ‘--target=arm-arm-none-eabi’


Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: --ec++ 

The output was:
1
g++: error: unrecognized command-line option ‘--ec++’; did you mean ‘-Weffc++’?


Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
1
g++: warning: ‘-mcpu=’ is deprecated; use ‘-mtune=’ or ‘-march=’ instead
g++: error: unrecognized command-line option ‘--target=arm-arm-none-eabi’


Compilation of the CXX compiler identification source "CMakeCXXCompilerId.cpp" did not produce an executable in "/home/corki/eskf/build/CMakeFiles/3.22.1/CompilerIdCXX".

Determining if the C compiler works failed with the following output:
Change Dir: /home/corki/eskf/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/gmake -f Makefile cmTC_a24b6/fast && gmake[1]: 进入目录“/home/corki/eskf/build/CMakeFiles/CMakeTmp”
/usr/bin/gmake  -f CMakeFiles/cmTC_a24b6.dir/build.make CMakeFiles/cmTC_a24b6.dir/build
gmake[2]: 进入目录“/home/corki/eskf/build/CMakeFiles/CMakeTmp”
Building C object CMakeFiles/cmTC_a24b6.dir/testCCompiler.c.o
/usr/bin/gcc    -o CMakeFiles/cmTC_a24b6.dir/testCCompiler.c.o -c /home/corki/eskf/build/CMakeFiles/CMakeTmp/testCCompiler.c
Linking C executable cmTC_a24b6
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_a24b6.dir/link.txt --verbose=1
Error opening link script "CMakeFiles/cmTC_a24b6.dir/link.txt"
gmake[2]: *** [CMakeFiles/cmTC_a24b6.dir/build.make:99：cmTC_a24b6] 错误 1
gmake[2]: 离开目录“/home/corki/eskf/build/CMakeFiles/CMakeTmp”
gmake[1]: *** [Makefile:127：cmTC_a24b6/fast] 错误 2
gmake[1]: 离开目录“/home/corki/eskf/build/CMakeFiles/CMakeTmp”



